/*
Given the head of a singly linked list, return the middle node of the linked list.
If there are two middle nodes, return the second middle node.

Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.

Input: head = [1,2,3,4,5,6]
Output: [4,5,6]
Explanation: Since the list has two middle nodes with values 3 and 4, we return the second one.
 
code execustion time : 3 ms
*/

 ListNode* middleNode(ListNode* head) {
        int len=0;
        ListNode* temp= head;
        while(temp!=nullptr){
            len++;
            temp=temp->next;
        } 
     
           while(head!=nullptr){
             for(int i=0; i<len ; i++){
                if(i==len/2){
                    return head;
                }
                head = head->next;
             }
           }
        return head->next;
    }
