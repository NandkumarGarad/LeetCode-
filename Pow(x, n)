/*

Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

Input: x = 2.00000, n = 10
Output: 1024.00000

Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25

Input: x = 2.10000, n = 3
Output: 9.26100
*/




//by using recursion 
// but this approched not saticsfited at the time if n is negative 
double myPow(double x, int n) {
       if(n==0){
        return 1;
       }else if(n>0){
            return x* myPow(x,n-1);
       }else{
         return x*myPow(x,n+1);
       } 
}


// this is correct output but time limit is not satisfited
        double myPow(double x, int n) {
            double pow = 1.0;
            int i=(n<0) ? -n :n;
            for(  ; i!=0 ; i--){
              pow *= x;
            }  
            return n>0? pow : 1/pow;
        }
