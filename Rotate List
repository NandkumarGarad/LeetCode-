/*
Given the head of a linked list, rotate the list to the right by k places.
Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]
*/

 ListNode* rotateRight(ListNode* head, int k) {

        if(head==nullptr || head->next==nullptr || k==0 ){
            return head;
        }        ListNode* tail = head;
        int n =1;
        while (tail->next) {
            n++;
            tail = tail->next;
        }
        k = k % n;
        if (k == 0)
            return head;

        tail->next = head;

        ListNode* temp = head;
        for (int i = 1; i < n - k; i++) {
            temp = temp->next;
        }
        ListNode* newHead = temp->next;
        temp->next = NULL;
        return newHead;
    }
