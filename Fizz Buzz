/*
Given an integer n, return a string array answer (1-indexed) where:
answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.


Input: n = 3
Output: ["1","2","Fizz"]

Input: n = 5
Output: ["1","2","Fizz","4","Buzz"]



 runtime : 3 ms

*/
// 3ms 
 vector<string> fizzBuzz(int n) {
        vector<string> list;
        int i=1;
        while(i<=n){
            if(i%3==0 && i%5==0){
                list.push_back("FizzBuzz");
            }else if(i%3==0){
                list.push_back("Fizz");
            }else if(i%5==0){
                list.push_back("Buzz");
            }else{
                list.push_back(to_string(i));
            }
            i++;
        }
         return list;
    }


// after update 0ms

 vector<string> fizzBuzz(int n) {
     vector<string> list;
        for(int i=1 ; i<=n ; i++){
           string str= ((i%5==0)&&(i%3==0))?"FizzBuzz":(i%3==0)?"Fizz":(i%5==0)?"Buzz":to_string(i);
           list.push_back(str);
        }
      return list;
 }
